{
  "openapi": "3.0.1",
  "info": {
    "title": "Volubile API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5005",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/webhook": {
      "post": {
        "tags": [
          "webhook-gateway"
        ],
        "operationId": "post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCallEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "List contacts",
        "operationId": "list",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "Filter contacts by tag",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Import_123"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of contacts to return",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 25
            },
            "example": 25
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of contacts to skip",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "example": 1
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting property and direction",
            "schema": {
              "type": "string"
            },
            "example": "firstName,DESC"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseContactResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create a contact",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/contacts/{contactId}/call": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Call a contact",
        "operationId": "call",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCreateCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Call created successfully"
          },
          "404": {
            "description": "The contact with given Id was not found."
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/contacts/import": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Import a batch of contacts",
        "operationId": "importBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportContactsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/campaigns": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create a campaign",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/calls": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "List calls",
        "operationId": "list_1",
        "parameters": [
          {
            "name": "agentId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "campaignId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of contacts to return",
            "schema": {
              "maximum": 100,
              "type": "integer",
              "default": 25
            },
            "example": 25
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of contacts to skip",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "example": 1
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting property and direction",
            "schema": {
              "type": "string"
            },
            "example": "type,DESC"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageResponseCallResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Call"
        ],
        "summary": "Create a call",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201": {
            "description": "Call created successfully"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact",
        "operationId": "get",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "UUID of the contact",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Contact"
        ],
        "summary": "Update a contact",
        "operationId": "update",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "05673a94-fc5a-43f2-af50-a8f687132d74"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "404": {
            "description": "The contact with given Id was not found."
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Get a campaign",
        "operationId": "get_1",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "404": {
            "description": "The campaign with given Id was not found."
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/v1/calls/{callId}": {
      "get": {
        "tags": [
          "Call"
        ],
        "summary": "Get a call",
        "operationId": "get_2",
        "parameters": [
          {
            "name": "callId",
            "in": "path",
            "description": "ID of the call to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "05673a94-fc5a-43f2-af50-a8f687132d74"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The call with given Id was not found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Date and time when the error occurs at UTC time in format 'yyyy-MM-dd'T'HH:mm:ss.SSS'Z''",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Http status code",
            "format": "int32"
          },
          "field": {
            "type": "string",
            "description": "Field in error"
          },
          "rejectedValue": {
            "type": "object",
            "description": "Value in error"
          },
          "message": {
            "type": "string",
            "description": "Information about the error"
          },
          "errors": {
            "type": "array",
            "description": "List of specific validation errors",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field in error"
          },
          "rejectedValue": {
            "type": "object",
            "description": "Value in error"
          },
          "message": {
            "type": "string",
            "description": "Description of the failed validation"
          }
        },
        "description": "List of specific validation errors"
      },
      "PostCallEvent": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "callId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateContactRequest": {
        "required": [
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ContactCreateCallRequest": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "ID of the agent to use for the call",
            "format": "uuid"
          }
        }
      },
      "ImportContactsRequest": {
        "type": "object",
        "properties": {
          "tag": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateContactRequest"
            }
          }
        }
      },
      "CreateCampaignRequest": {
        "required": [
          "agentId",
          "days",
          "name",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "agentId": {
            "type": "string",
            "description": "Unique identifier of the agent to perform the campaign with",
            "format": "uuid"
          },
          "startTime": {
            "type": "string",
            "description": "Start date of the campaign",
            "format": "date-time"
          },
          "timeSlots": {
            "type": "array",
            "description": "Timeslots of the campaign (when the calls will be performed during the day). Max 2 timeslots",
            "items": {
              "$ref": "#/components/schemas/TimeSlot"
            }
          },
          "batchSize": {
            "type": "integer",
            "description": "The number of calls per...",
            "format": "int32"
          },
          "retry": {
            "$ref": "#/components/schemas/Retry"
          },
          "contactImportTag": {
            "type": "string",
            "description": "Tag name for the contacts import"
          },
          "contacts": {
            "type": "array",
            "description": "List of contacts to call during the campaign",
            "items": {
              "$ref": "#/components/schemas/CreateContactRequest"
            }
          },
          "days": {
            "type": "array",
            "description": "Days of the campaign",
            "items": {
              "type": "string",
              "description": "Days of the campaign",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          }
        }
      },
      "Retry": {
        "type": "object",
        "properties": {
          "max": {
            "maximum": 3,
            "minimum": 0,
            "type": "integer",
            "description": "Maximum number of calls to try to reach the contact",
            "format": "int32"
          },
          "delay": {
            "type": "integer",
            "description": "Minimum delay before calling again",
            "format": "int32"
          },
          "retryOn": {
            "type": "array",
            "description": "Condition to trigger a retry",
            "items": {
              "type": "string",
              "description": "Condition to trigger a retry"
            }
          }
        },
        "description": "Retry parameters when the contact cannot be reached"
      },
      "TimeSlot": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Start of the time slot, pattern = \"HH:mm\"",
            "example": "10:30"
          },
          "endTime": {
            "type": "string",
            "description": "Start of the time slot, pattern = \"HH:mm\"",
            "example": "12:30"
          }
        },
        "description": "Timeslots of the campaign (when the calls will be performed during the day). Max 2 timeslots"
      },
      "CampaignResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the campaign",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "agentId": {
            "type": "string",
            "description": "Unique identifier of the agent to perform the campaign with",
            "format": "uuid"
          },
          "startTime": {
            "type": "string",
            "description": "Start date of the campaign",
            "format": "date-time"
          },
          "timeSlots": {
            "type": "array",
            "description": "Timeslots of the campaign (when the calls will be performed during the day). Max 2 timeslots",
            "items": {
              "$ref": "#/components/schemas/TimeSlot"
            }
          },
          "batchSize": {
            "type": "integer",
            "description": "The number of calls per...",
            "format": "int32"
          },
          "retry": {
            "$ref": "#/components/schemas/Retry"
          },
          "days": {
            "type": "array",
            "description": "Days of the campaign",
            "items": {
              "type": "string",
              "description": "Days of the campaign",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          }
        }
      },
      "CreateCallRequest": {
        "required": [
          "agentId"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "Phone number to call, in the E.164 international standard format",
            "example": "+33612345678"
          },
          "agentId": {
            "type": "string",
            "description": "ID of the agent to use for the call",
            "format": "uuid"
          }
        }
      },
      "UpdateContactRequest": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "PageResponseContactResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactResponse"
            }
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CallResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the call",
            "format": "uuid"
          },
          "agentId": {
            "type": "string",
            "description": "Unique identifier of the agent",
            "format": "uuid"
          },
          "contactId": {
            "type": "string",
            "description": "Unique identifier of the contact",
            "format": "uuid"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the other party, in the E.164 international standard format",
            "example": "+33612345678"
          },
          "type": {
            "type": "string",
            "description": "Type of the call",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ]
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the call in seconds",
            "format": "int64",
            "example": 360
          },
          "startTime": {
            "type": "string",
            "description": "Start time of the call",
            "format": "date-time",
            "example": "2024-07-30T14:35:00Z"
          },
          "endTime": {
            "type": "string",
            "description": "End time of the call",
            "format": "date-time",
            "example": "2024-07-30T14:41:00Z"
          },
          "status": {
            "type": "string",
            "description": "Status of the call",
            "enum": [
              "UNKNOWN",
              "IN_PROGRESS",
              "CANCELED",
              "COMPLETED",
              "NO_ANSWER",
              "VOICE_BOX",
              "UNREACHABLE",
              "FAILED",
              "TRANSFERRED"
            ]
          },
          "extractors": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Result of the extractors",
              "example": {
                "customer": {
                  "firstname": "firstname",
                  "lastname": "lastname",
                  "address": "address"
                },
                "example": "example"
              }
            },
            "description": "Result of the extractors",
            "example": {
              "customer": {
                "firstname": "firstname",
                "lastname": "lastname",
                "address": "address"
              },
              "example": "example"
            }
          },
          "classifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Result of the classifiers",
              "example": {
                "Customer's request": "Refund"
              }
            },
            "description": "Result of the classifiers",
            "example": {
              "Customer's request": "Refund"
            }
          },
          "summary": {
            "type": "string",
            "description": "Summary of what happened during the call",
            "example": "Discussed project requirements and next steps."
          },
          "created": {
            "type": "string",
            "description": "Timestamp when the call record was created",
            "format": "date-time",
            "example": "2024-07-30T14:45:00Z"
          }
        }
      },
      "PageResponseCallResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallResponse"
            }
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "Your API key.",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  }
}